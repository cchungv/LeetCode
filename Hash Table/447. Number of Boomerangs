# I type the code that is not best method by myself.

class Solution(object):
    def numberOfBoomerangs(self, points):
        """
        :type points: List[List[int]]
        :rtype: int
        """
        if len(points) < 3:
            return 0

        ans = 0
        dct = dict()
        for i, p1 in enumerate(points[0:-1]):
            for j in range(i + 1, len(points)):
                p2 = points[j]
                d = self.distance(p1, p2)
                if dct.get(d):
                    dct[d] += [{i, j}]
                else:
                    dct[d] = [{i, j}]

        for lst in dct.values():
            for i, p1 in enumerate(lst):
                for p2 in lst[i + 1::]:
                    if p1.intersection(p2):
                        ans += 1
                        
        return ans*2
    
    def distance(self, p1, p2):
        x = p1[0] - p2[0]
        y = p1[1] - p2[1]
        return x**2 + y**2
